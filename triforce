#!/usr/bin/env python

# for each config file
#   for each sysenv
#     create the sysenv if it doesn't exist
#     gather all requirements to install and their url and all symlinks
#     pip install the requirements
#     update/create all the symlinks

import os
import sys
import yaml
import sh


config_files = sys.argv[1:]


class Virtualenv(object):

    def __init__(self, venv_name, venv_path,
                 python_version=3, urls=None, symlinks=None):
        self.venv_name = venv_name
        self.venv_path = venv_path
        self.python_version = python_version
        self.urls = urls
        self.symlinks = symlinks


def create_venv_2(venv_name):
    venv_path = os.path.join(os.environ['HOME'], venv_name)
    print("Will create venv at: '{0}'".format(venv_path))
    print(sh.virtualenv(venv_path))


def process_venv(venv_name):
    create_venv_2(venv_name)


for config_file in config_files:
    with open(config_file) as config_file_pointer:
        config = yaml.load(config_file_pointer)
        urls, symlinks = [], []
        for sysvenv_name, sysvenv in config.items():
            for program, options in sysvenv.items():
                try:
                    urls.append(options['url'])
                except KeyError:
                    urls.append(program)
                try:
                    symlinks.extend(options['symlink'])
                except KeyError:
                    symlinks.append(program)
    process_venv(sysvenv_name)
    for _ in config_file, config, sysvenv_name, sysvenv, urls, symlinks:
        print(_)
